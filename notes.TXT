c# (or f#, VB) compiles to msil(microsoft intermediate language)
	benifit - c# 4,5,6.. can compile on same runtime 

MSIL -> .net Runtime -> windows/linux (.net runtime are cross platform )

base class library provided, for basic functions , dates, math, files etc. 

use third party library using nuget 

C:\Windows\Microsoft.NET\Framework64\v3.5\csc.exe /out:lol.dll /target:library lol.cs
makes it dll, without parameters makes exe 

if we have 2 files,a and b, a having namespace for b, need to compile bot : 
csc a.cs b.cs /out:hello.exe /target.exe

basic : 
using System;

namespace MyApp // Note: actual namespace depends on the project name.
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}



// want to use namespace as
using name1 = namespace1
{
	name1.method()
}

 //access modifier is internal by default 
 
 An interface is a completely "abstract class", which can only contain abstract methods and properties (with empty bodies)
 
 
top level class: internal
method: private
members (unless an interface or enum): private (including nested classes)
members (of interface or enum): public
constructor: private (note that if no constructor is explicitly defined, a public default constructor will be automatically defined)
delegate: internal
interface: internal
explicitly implemented interface member: public!

public : everywhere 
internal : same assembly 
protected: derived class
private : same class 
 
 //SHORTCUPT 
 
 ctr k+c : comment 
 ctr k+u : uncomment
 
 ctrl M+O  => collapse all members 
 
 ctrl M+L  => set all regions to same colpase/expalnded state TOGGLE
 
 ctrl M+M  => toggle current section 